#!/usr/bin/env ruby

preprocess do
  # add tag pages
  all_tags(articles).each do |tag|
    path = "/bloggery/tagged/#{slugify(tag)}"
    attributes = {
      title: "Bloggery about <strong>#{tag}</strong>",
      tagged: "#{tag}"
    }

    @items.create("<%= render '/bloggery/tagged.*' %>", attributes, "#{path}/index.md")
  end

end

# don't compile data
compile '/data/**/*' do
  nil
end

# compile but don't output partials
compile '/partials/**/*.md' do
  nil
end

compile '/partials/**/*.slim' do
  filter :erb
  filter :slim
end

# write /pages/* to /
compile '/pages/**/*.md' do
  filter :erb
  filter :kramdown
  layout '/default.*'
  write item.identifier.without_ext.to_s.gsub('/pages/', '/') + '.html'
end

compile '/pages/**/*' do
  write item.identifier.to_s.gsub('/pages', '')
end

# write post assets to the right directory
compile '/posts/**/*.md' do
  filter :erb
  filter :kramdown
  layout '/default.*'
  write item.identifier.without_ext.to_s.gsub('posts/', 'bloggery/posts/') + '.html'
end

# fallback compilation of files
compile '/**/*.md' do
  filter :erb
  filter :kramdown
  layout '/default.*'
  write item.identifier.without_ext.to_s + '.html'
end

compile '/**/*.slim' do
  filter :erb
  filter :slim
  layout '/default.*'
  write item.identifier.without_ext.to_s + '.html'
end

# ignore partials
compile '/**/_*.scss' do
  nil
end

# compile scss to css
# get file path -> remove extension -> route to /css -> write .css
compile '/scss/*.scss' do
  filter :sass, syntax: :scss
  write item.identifier.without_ext.to_s.gsub('scss/', 'css/') + '.css'
end

# passthrough js
passthrough '/js/**/*.js'

compile '/**/*' do
  write item.identifier.to_s
end

layout '/**/*', :erb
